# 재귀 구조를 사용한 Backtraking 방식으로 수열을 구한다
# 매 index마다 비어있는 s에 추가할 수를 찾기 위해 재귀 함수를 계속 호출한다
# 구조 자체를 외워둘 필요가 있을 듯 하다.
# 이 구조는 우리가 원하는 s를 걸러낼 수 있는 맨 앞의 조건문에 걸리기 전까지
# 조건문 이후의 for문을 돌리면서 s를 하나씩 채워나간다
# for 문 안에는 우리가 원하는 s가 되도록 만드는 조건이 포함되어 있으며
# 맨 앞의 조건문의 끝에 return을 붙여서 조건이 달성 될 경우 
# for문에서 추가적으로 해줘야하는 작업(pop()을 통한 다음 경우의 수 완성 등)을 추가한다.

# 구조가 한번에 들어오기 힘들어 이미지화 시켜보았다.

# 코드
n, m = map(int,input().split())

s=[]

def back():
    if len(s)==m:
        print(' '.join(map(str,s)))
        return
    
    for i in range(1,n+1):
        if i not in s:
            s.append(i)
            back()
            s.pop()
            
back()
